{"version":3,"file":"static/js/465.2b80e7f8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const lowerCasedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) => {\n    return contact.name.toLowerCase().includes(lowerCasedFilter);\n  });\n};\n","import { useState } from \"react\";\nimport css from \"./ContactForm.module.css\";\nimport { useDispatch,useSelector  } from \"react-redux\";\nimport { addContactsAction } from \"redux/operations\";\nimport { getContacts } from \"redux/contacts/contactsSelector\";\nimport { toast } from \"react-toastify\";\n\n\nexport const ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`Contact ${name} is already exist`);\n    }\n    dispatch(addContactsAction({ name, number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"name\" className={css.formLabel}>\n        Name{\" \"}\n      </label>\n      <input\n        className={css.formName}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"number\" className={css.formLabel}>\n        Number{\" \"}\n      </label>\n      <input\n        className={css.formNumber}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChange}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/contactsSelector\";\nimport { contactsFilterAction } from \"redux/contacts/filter.slice\";\nimport css from \"./Filter.module.css\";\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={value}\n        onChange={(e) => dispatch(contactsFilterAction(e.target.value))}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import css from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilteredContacts } from \"redux/contacts/contactsSelector\";\nimport { deleteContactsAction } from \"redux/operations\";\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts); \n  const dispatch = useDispatch();\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {filteredContacts.map((contact) => (\n          <li key={contact.id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => dispatch(deleteContactsAction(contact.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ColorRing} from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => (\n  <div className={css.Loader}>\n   <ColorRing\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"blocks-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"blocks-wrapper\"\n  colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  </div>\n);","import { ContactForm } from \"../../components/ContactForm/ContactForm\";\nimport { Filter } from \"../../components/Filter/Filter\";\nimport { ContactList } from \"../../components/ContactList/ContactList\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/operations\";\nimport { Loader } from \"../../components/Loader/Loader\";\n\nimport { useDispatch ,useSelector } from \"react-redux\";\nimport { getError, getIsLoading } from \"../../redux/contacts/contactsSelector\";\n\nimport { Heading } from '@chakra-ui/react';\n\n\nconst ContactsPage = () =>{\n const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 20,\n        color: \"#010101\",\n      }}\n    >\n\n      <Heading mt=\"50px\" textAlign=\"center\">\n       Phonebook\n      </Heading>\n      <ContactForm />\n  \n      <h2> Contacts</h2>\n      <Filter />\n           {isLoading && !error && <Loader/>}\n      <ContactList />\n   \n    </div>\n  );\n}\n\nexport default ContactsPage;"],"names":["getContacts","state","contacts","getFilter","filter","getIsLoading","isLoading","getError","error","getFilteredContacts","lowerCasedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","className","css","onSubmit","preventDefault","find","toast","addContactsAction","htmlFor","id","type","pattern","title","required","placeholder","onChange","Filter","contactsFilterAction","ContactList","filteredContacts","map","onClick","deleteContactsAction","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","mt","textAlign"],"sourceRoot":""}